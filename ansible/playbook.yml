---
- name: Install Kubernetes compatible Docker on master and worker nodes
  hosts: master:worker
  become: yes
  vars:
    ansible_ssh_private_key_file: /root/.ssh/alpaca.pem
  tasks:
    - name: Test connectivity to instances
      ping:

    - name: Show ping results
      debug:
        msg: "Ping successful to {{ inventory_hostname }}"

    - name: Ensure /etc/resolv.conf contains Google DNS
      lineinfile:
        path: /etc/resolv.conf
        line: "{{ item }}"
        state: present
      loop:
        - "nameserver 8.8.8.8"
        - "nameserver 8.8.4.4"

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - gnupg

    - name: Add Docker GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      args:
        creates: /usr/share/keyrings/docker-archive-keyring.gpg

    - name: Get Ubuntu release name
      command: lsb_release -cs
      register: release_name

    - name: Add Docker repository
      shell: |
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ release_name.stdout }} stable" > /etc/apt/sources.list.d/docker.list
      args:
        creates: /etc/apt/sources.list.d/docker.list

    - name: Update apt cache after adding Docker repository
      apt:
        update_cache: yes

    - name: Install Kubernetes-compatible Docker packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Enable and start Docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: Configure Docker for Kubernetes
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "exec-opts": ["native.cgroupdriver=systemd"],
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "100m"
            },
            "storage-driver": "overlay2"
          }

    - name: Restart Docker to apply changes
      service:
        name: docker
        state: restarted
